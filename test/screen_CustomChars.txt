#include <Wire.h>               // 引入Wire库，用于I2C通信
#include <LiquidCrystal_I2C.h>  // 引入LiquidCrystal_I2C库，用于控制I2C LCD

// 根据Arduino IDE版本定义printByte宏，以保持向后兼容性
#if defined(ARDUINO) && ARDUINO >= 100
#define printByte(args) write(args);
#else
#define printByte(args) print(args, BYTE);
#endif

// 自定义字符的字节模式
uint8_t bell[8] = { 0x4, 0xe, 0xe, 0xe, 0x1f, 0x0, 0x4 };
uint8_t note[8] = { 0x2, 0x3, 0x2, 0xe, 0x1e, 0xc, 0x0 };
uint8_t clock[8] = { 0x0, 0xe, 0x15, 0x17, 0x11, 0xe, 0x0 };
uint8_t heart[8] = { 0x0, 0xa, 0x1f, 0x1f, 0xe, 0x4, 0x0 };
uint8_t duck[8] = { 0x0, 0xc, 0x1d, 0xf, 0xf, 0x6, 0x0 };
uint8_t check[8] = { 0x0, 0x1, 0x3, 0x16, 0x1c, 0x8, 0x0 };
uint8_t cross[8] = { 0x0, 0x1b, 0xe, 0x4, 0xe, 0x1b, 0x0 };
uint8_t retarrow[8] = { 0x1, 0x1, 0x5, 0x9, 0x1f, 0x8, 0x4 };

// 初始化LCD对象，设置I2C地址为0x27，20字符宽和4行显示
LiquidCrystal_I2C lcd(0x27, 20, 4);

void setup() {
  lcd.init();       // 初始化LCD
  lcd.backlight();  // 打开背光

  // 创建自定义字符
  lcd.createChar(0, bell);
  lcd.createChar(1, note);
  lcd.createChar(2, clock);
  lcd.createChar(3, heart);
  lcd.createChar(4, duck);
  lcd.createChar(5, check);
  lcd.createChar(6, cross);
  lcd.createChar(7, retarrow);

  // 显示初始信息
  lcd.home();                   // 移动光标到初始位置
  lcd.print("Hello world...");  // 打印欢迎信息
  lcd.setCursor(0, 1);          // 移动光标到第二行
  lcd.print(" i ");
  lcd.printByte(3);  // 打印心形字符
  lcd.print(" arduinos!");
  delay(5000);  // 等待5秒

  displayKeyCodes();  // 显示所有自定义键码
}

// 显示所有自定义键码的函数
void displayKeyCodes(void) {
  uint8_t i = 0;
  while (1) {
    lcd.clear();  // 清除屏幕
    lcd.print("Codes 0x");
    lcd.print(i, HEX);  // 打印当前范围的起始键码
    lcd.print("-0x");
    lcd.print(i + 16, HEX);  // 打印当前范围的结束键码
    lcd.setCursor(0, 1);     // 移动光标到第二行
    for (int j = 0; j < 16; j++) {
      lcd.printByte(i + j);  // 逐个打印字符
    }
    i += 16;

    delay(4000);  // 每个显示持续4秒
  }
}

void loop() {
  // 主循环为空，因为所有操作都在setup中完成
}
